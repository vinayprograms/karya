# Karya Task Management Configuration

[general]
# Editor (defaults to vim). Supported options - "vim", "emacs", "nano", "code"
# editor = "nvim"

# Show additional details like Zettel ID column in table view (defaults to false)
# Note: -v/--verbose command-line flag takes precedence over this setting
# verbose = true

# -----------------------------------------------
# Directory paths for various karya commands
# Environment variables in paths (like $HOME) will be automatically expanded
[directories]
# Required: Root directory for projects (used by todo, prj, etc.)
# projects = "/path/to/your/projects"

# Zettelkasten directory (for zet and note commands)
# zettelkasten = "/path/to/zettelkasten"

# Karya inbox directory (defaults to projects directory)
# karya = "/path/to/karya"

# -----------------------------------------------
# Settings specific to 'todo' tool
[todo]
# Show completed tasks in TUI (defaults to false)
# show_completed = true

# Should only scan directories following zettelkasten structure (defaults to true)
# - true: Search for project/notes/zettelID/README.md files (zettelkasten structure)
# - false: Search all .md files in projects directory tree (unstructured)
# structured = true

# Customize task state detection by defining keyword lists.
# Keywords are case-sensitive and matched against task markers (e.g., "TODO:", "DOING:").
#
# active = [
#     "TODO", "TASK", "NOTE", "REMINDER", "EVENT", "MEETING",
#     "CALL", "EMAIL", "MESSAGE", "FOLLOWUP", "REVIEW",
#     "CHECKIN", "CHECKOUT", "RESEARCH", "READING", "WRITING",
#     "DRAFT", "FINALIZE", "SUBMIT", "PRESENTATION"
# ]
#
# inprogress = [
#     "DOING", "EDITING", "INPROGRESS", "WIP", "WORKING", "STARTED",
#     "WAITING", "DEFERRED", "DELEGATED"
# ]
#
# completed = [
#     "ARCHIVED", "CANCELED", "DELETED", "DONE", "COMPLETED", "CLOSED"
# ]
#
# someday = [
#     "SOMEDAY", "MAYBE", "LATER", "WISHLIST"
# ]

# -----------------------------------------------
# Color customization for TUI
# You can specify colors using three different methods:
#   1. Color names (ANSI 16-color palette) - recommended for readability
#   2. ANSI numbers (0-15) - for exact ANSI 16-color control
#   3. Hex colors (#RRGGBB) - for full RGB color range (terminal permitting)
#
# Supported Color Names (ANSI 16-Color Palette):
#   Basic:   black, red, green, yellow, blue, magenta, cyan, white
#   Bright:  bright-red, bright-green, bright-yellow, bright-blue,
#            bright-magenta, bright-cyan, bright-black, bright-white
#
# [colors]
# Theme sourced from gogh-themes package - https://github.com/WillyV3/gogh-themes (361 available themes)
# When set, color names (black, red, bright-blue, etc.)  will use the
# theme's palette. Direct hex codes (#RRGGBB) and ANSI numbers work too.
# If no theme is set, terminal's native ANSI colors are used
# theme = "Dracula"
#
# project           = "green"                 # Color name example
# active            = "yellow"                # Color name example
# inprogress        = "6"                     # ANSI number example (cyan)
# completed         = "gray"                  # Alias for bright-black
# someday           = "7"                     # Someday/maybe tasks (neutral, not under consideration)
# description       = "#E8F4F8"               # Hex colors are supported
# completed-description = "gray"              # Completed task text (faded)
# tag               = "bright-white"         # Tag badge text
# tag-bg            = "black"                 # Tag badge background
# date              = "yellow"                # Scheduled date color
# date-bg           = "black"                 # Scheduled date background
# past-date         = "red"                   # Past/overdue date (warning)
# past-bg           = "black"                 # Past date background
# today-date        = "black"                 # Today's date text
# today-bg          = "yellow"                # Today's date background (highlight)
# assignee          = "bright-white"         # Assignee badge text
# assignee-bg       = "black"                 # Assignee badge background
